// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apache/rocketmq/v2/definition.proto

package apache.rocketmq.v2;

public interface SystemPropertiesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:apache.rocketmq.v2.SystemProperties)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Tag, which is optional.
   * </pre>
   *
   * <code>optional string tag = 1;</code>
   * @return Whether the tag field is set.
   */
  boolean hasTag();
  /**
   * <pre>
   * Tag, which is optional.
   * </pre>
   *
   * <code>optional string tag = 1;</code>
   * @return The tag.
   */
  java.lang.String getTag();
  /**
   * <pre>
   * Tag, which is optional.
   * </pre>
   *
   * <code>optional string tag = 1;</code>
   * @return The bytes for tag.
   */
  com.google.protobuf.ByteString
      getTagBytes();

  /**
   * <pre>
   * Message keys
   * </pre>
   *
   * <code>repeated string keys = 2;</code>
   * @return A list containing the keys.
   */
  java.util.List<java.lang.String>
      getKeysList();
  /**
   * <pre>
   * Message keys
   * </pre>
   *
   * <code>repeated string keys = 2;</code>
   * @return The count of keys.
   */
  int getKeysCount();
  /**
   * <pre>
   * Message keys
   * </pre>
   *
   * <code>repeated string keys = 2;</code>
   * @param index The index of the element to return.
   * @return The keys at the given index.
   */
  java.lang.String getKeys(int index);
  /**
   * <pre>
   * Message keys
   * </pre>
   *
   * <code>repeated string keys = 2;</code>
   * @param index The index of the value to return.
   * @return The bytes of the keys at the given index.
   */
  com.google.protobuf.ByteString
      getKeysBytes(int index);

  /**
   * <pre>
   * Message identifier, client-side generated, remains unique.
   * if message_id is empty, the send message request will be aborted with
   * status `INVALID_ARGUMENT`
   * </pre>
   *
   * <code>string message_id = 3;</code>
   * @return The messageId.
   */
  java.lang.String getMessageId();
  /**
   * <pre>
   * Message identifier, client-side generated, remains unique.
   * if message_id is empty, the send message request will be aborted with
   * status `INVALID_ARGUMENT`
   * </pre>
   *
   * <code>string message_id = 3;</code>
   * @return The bytes for messageId.
   */
  com.google.protobuf.ByteString
      getMessageIdBytes();

  /**
   * <pre>
   * Message body digest
   * </pre>
   *
   * <code>.apache.rocketmq.v2.Digest body_digest = 4;</code>
   * @return Whether the bodyDigest field is set.
   */
  boolean hasBodyDigest();
  /**
   * <pre>
   * Message body digest
   * </pre>
   *
   * <code>.apache.rocketmq.v2.Digest body_digest = 4;</code>
   * @return The bodyDigest.
   */
  apache.rocketmq.v2.Digest getBodyDigest();
  /**
   * <pre>
   * Message body digest
   * </pre>
   *
   * <code>.apache.rocketmq.v2.Digest body_digest = 4;</code>
   */
  apache.rocketmq.v2.DigestOrBuilder getBodyDigestOrBuilder();

  /**
   * <pre>
   * Message body encoding. Candidate options are identity, gzip, snappy etc.
   * </pre>
   *
   * <code>.apache.rocketmq.v2.Encoding body_encoding = 5;</code>
   * @return The enum numeric value on the wire for bodyEncoding.
   */
  int getBodyEncodingValue();
  /**
   * <pre>
   * Message body encoding. Candidate options are identity, gzip, snappy etc.
   * </pre>
   *
   * <code>.apache.rocketmq.v2.Encoding body_encoding = 5;</code>
   * @return The bodyEncoding.
   */
  apache.rocketmq.v2.Encoding getBodyEncoding();

  /**
   * <pre>
   * Message type, normal, FIFO or transactional.
   * </pre>
   *
   * <code>.apache.rocketmq.v2.MessageType message_type = 6;</code>
   * @return The enum numeric value on the wire for messageType.
   */
  int getMessageTypeValue();
  /**
   * <pre>
   * Message type, normal, FIFO or transactional.
   * </pre>
   *
   * <code>.apache.rocketmq.v2.MessageType message_type = 6;</code>
   * @return The messageType.
   */
  apache.rocketmq.v2.MessageType getMessageType();

  /**
   * <pre>
   * Message born time-point.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp born_timestamp = 7;</code>
   * @return Whether the bornTimestamp field is set.
   */
  boolean hasBornTimestamp();
  /**
   * <pre>
   * Message born time-point.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp born_timestamp = 7;</code>
   * @return The bornTimestamp.
   */
  com.google.protobuf.Timestamp getBornTimestamp();
  /**
   * <pre>
   * Message born time-point.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp born_timestamp = 7;</code>
   */
  com.google.protobuf.TimestampOrBuilder getBornTimestampOrBuilder();

  /**
   * <pre>
   * Message born host. Valid options are IPv4, IPv6 or client host domain name.
   * </pre>
   *
   * <code>string born_host = 8;</code>
   * @return The bornHost.
   */
  java.lang.String getBornHost();
  /**
   * <pre>
   * Message born host. Valid options are IPv4, IPv6 or client host domain name.
   * </pre>
   *
   * <code>string born_host = 8;</code>
   * @return The bytes for bornHost.
   */
  com.google.protobuf.ByteString
      getBornHostBytes();

  /**
   * <pre>
   * Time-point at which the message is stored in the broker, which is absent
   * for message publishing.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp store_timestamp = 9;</code>
   * @return Whether the storeTimestamp field is set.
   */
  boolean hasStoreTimestamp();
  /**
   * <pre>
   * Time-point at which the message is stored in the broker, which is absent
   * for message publishing.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp store_timestamp = 9;</code>
   * @return The storeTimestamp.
   */
  com.google.protobuf.Timestamp getStoreTimestamp();
  /**
   * <pre>
   * Time-point at which the message is stored in the broker, which is absent
   * for message publishing.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp store_timestamp = 9;</code>
   */
  com.google.protobuf.TimestampOrBuilder getStoreTimestampOrBuilder();

  /**
   * <pre>
   * The broker that stores this message. It may be broker name, IP or arbitrary
   * identifier that uniquely identify the server.
   * </pre>
   *
   * <code>string store_host = 10;</code>
   * @return The storeHost.
   */
  java.lang.String getStoreHost();
  /**
   * <pre>
   * The broker that stores this message. It may be broker name, IP or arbitrary
   * identifier that uniquely identify the server.
   * </pre>
   *
   * <code>string store_host = 10;</code>
   * @return The bytes for storeHost.
   */
  com.google.protobuf.ByteString
      getStoreHostBytes();

  /**
   * <pre>
   * Time-point at which broker delivers to clients, which is optional.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp delivery_timestamp = 11;</code>
   * @return Whether the deliveryTimestamp field is set.
   */
  boolean hasDeliveryTimestamp();
  /**
   * <pre>
   * Time-point at which broker delivers to clients, which is optional.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp delivery_timestamp = 11;</code>
   * @return The deliveryTimestamp.
   */
  com.google.protobuf.Timestamp getDeliveryTimestamp();
  /**
   * <pre>
   * Time-point at which broker delivers to clients, which is optional.
   * </pre>
   *
   * <code>optional .google.protobuf.Timestamp delivery_timestamp = 11;</code>
   */
  com.google.protobuf.TimestampOrBuilder getDeliveryTimestampOrBuilder();

  /**
   * <pre>
   * If a message is acquired by way of POP, this field holds the receipt,
   * which is absent for message publishing.
   * Clients use the receipt to acknowledge or negatively acknowledge the
   * message.
   * </pre>
   *
   * <code>optional string receipt_handle = 12;</code>
   * @return Whether the receiptHandle field is set.
   */
  boolean hasReceiptHandle();
  /**
   * <pre>
   * If a message is acquired by way of POP, this field holds the receipt,
   * which is absent for message publishing.
   * Clients use the receipt to acknowledge or negatively acknowledge the
   * message.
   * </pre>
   *
   * <code>optional string receipt_handle = 12;</code>
   * @return The receiptHandle.
   */
  java.lang.String getReceiptHandle();
  /**
   * <pre>
   * If a message is acquired by way of POP, this field holds the receipt,
   * which is absent for message publishing.
   * Clients use the receipt to acknowledge or negatively acknowledge the
   * message.
   * </pre>
   *
   * <code>optional string receipt_handle = 12;</code>
   * @return The bytes for receiptHandle.
   */
  com.google.protobuf.ByteString
      getReceiptHandleBytes();

  /**
   * <pre>
   * Message queue identifier in which a message is physically stored.
   * </pre>
   *
   * <code>int32 queue_id = 13;</code>
   * @return The queueId.
   */
  int getQueueId();

  /**
   * <pre>
   * Message-queue offset at which a message is stored, which is absent for
   * message publishing.
   * </pre>
   *
   * <code>optional int64 queue_offset = 14;</code>
   * @return Whether the queueOffset field is set.
   */
  boolean hasQueueOffset();
  /**
   * <pre>
   * Message-queue offset at which a message is stored, which is absent for
   * message publishing.
   * </pre>
   *
   * <code>optional int64 queue_offset = 14;</code>
   * @return The queueOffset.
   */
  long getQueueOffset();

  /**
   * <pre>
   * Period of time servers would remain invisible once a message is acquired.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration invisible_duration = 15;</code>
   * @return Whether the invisibleDuration field is set.
   */
  boolean hasInvisibleDuration();
  /**
   * <pre>
   * Period of time servers would remain invisible once a message is acquired.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration invisible_duration = 15;</code>
   * @return The invisibleDuration.
   */
  com.google.protobuf.Duration getInvisibleDuration();
  /**
   * <pre>
   * Period of time servers would remain invisible once a message is acquired.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration invisible_duration = 15;</code>
   */
  com.google.protobuf.DurationOrBuilder getInvisibleDurationOrBuilder();

  /**
   * <pre>
   * Business code may failed to process messages for the moment. Hence, clients
   * may request servers to deliver them again using certain back-off strategy,
   * the attempt is 1 not 0 if message is delivered first time, and it is absent
   * for message publishing.
   * </pre>
   *
   * <code>optional int32 delivery_attempt = 16;</code>
   * @return Whether the deliveryAttempt field is set.
   */
  boolean hasDeliveryAttempt();
  /**
   * <pre>
   * Business code may failed to process messages for the moment. Hence, clients
   * may request servers to deliver them again using certain back-off strategy,
   * the attempt is 1 not 0 if message is delivered first time, and it is absent
   * for message publishing.
   * </pre>
   *
   * <code>optional int32 delivery_attempt = 16;</code>
   * @return The deliveryAttempt.
   */
  int getDeliveryAttempt();

  /**
   * <pre>
   * Define the group name of message in the same topic, which is optional.
   * </pre>
   *
   * <code>optional string message_group = 17;</code>
   * @return Whether the messageGroup field is set.
   */
  boolean hasMessageGroup();
  /**
   * <pre>
   * Define the group name of message in the same topic, which is optional.
   * </pre>
   *
   * <code>optional string message_group = 17;</code>
   * @return The messageGroup.
   */
  java.lang.String getMessageGroup();
  /**
   * <pre>
   * Define the group name of message in the same topic, which is optional.
   * </pre>
   *
   * <code>optional string message_group = 17;</code>
   * @return The bytes for messageGroup.
   */
  com.google.protobuf.ByteString
      getMessageGroupBytes();

  /**
   * <pre>
   * Trace context for each message, which is optional.
   * </pre>
   *
   * <code>optional string trace_context = 18;</code>
   * @return Whether the traceContext field is set.
   */
  boolean hasTraceContext();
  /**
   * <pre>
   * Trace context for each message, which is optional.
   * </pre>
   *
   * <code>optional string trace_context = 18;</code>
   * @return The traceContext.
   */
  java.lang.String getTraceContext();
  /**
   * <pre>
   * Trace context for each message, which is optional.
   * </pre>
   *
   * <code>optional string trace_context = 18;</code>
   * @return The bytes for traceContext.
   */
  com.google.protobuf.ByteString
      getTraceContextBytes();

  /**
   * <pre>
   * If a transactional message stay unresolved for more than
   * `transaction_orphan_threshold`, it would be regarded as an
   * orphan. Servers that manages orphan messages would pick up
   * a capable publisher to resolve
   * </pre>
   *
   * <code>optional .google.protobuf.Duration orphaned_transaction_recovery_duration = 19;</code>
   * @return Whether the orphanedTransactionRecoveryDuration field is set.
   */
  boolean hasOrphanedTransactionRecoveryDuration();
  /**
   * <pre>
   * If a transactional message stay unresolved for more than
   * `transaction_orphan_threshold`, it would be regarded as an
   * orphan. Servers that manages orphan messages would pick up
   * a capable publisher to resolve
   * </pre>
   *
   * <code>optional .google.protobuf.Duration orphaned_transaction_recovery_duration = 19;</code>
   * @return The orphanedTransactionRecoveryDuration.
   */
  com.google.protobuf.Duration getOrphanedTransactionRecoveryDuration();
  /**
   * <pre>
   * If a transactional message stay unresolved for more than
   * `transaction_orphan_threshold`, it would be regarded as an
   * orphan. Servers that manages orphan messages would pick up
   * a capable publisher to resolve
   * </pre>
   *
   * <code>optional .google.protobuf.Duration orphaned_transaction_recovery_duration = 19;</code>
   */
  com.google.protobuf.DurationOrBuilder getOrphanedTransactionRecoveryDurationOrBuilder();

  /**
   * <pre>
   * Information to identify whether this message is from dead letter queue.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.DeadLetterQueue dead_letter_queue = 20;</code>
   * @return Whether the deadLetterQueue field is set.
   */
  boolean hasDeadLetterQueue();
  /**
   * <pre>
   * Information to identify whether this message is from dead letter queue.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.DeadLetterQueue dead_letter_queue = 20;</code>
   * @return The deadLetterQueue.
   */
  apache.rocketmq.v2.DeadLetterQueue getDeadLetterQueue();
  /**
   * <pre>
   * Information to identify whether this message is from dead letter queue.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.DeadLetterQueue dead_letter_queue = 20;</code>
   */
  apache.rocketmq.v2.DeadLetterQueueOrBuilder getDeadLetterQueueOrBuilder();
}
