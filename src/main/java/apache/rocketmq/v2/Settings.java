// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apache/rocketmq/v2/definition.proto

package apache.rocketmq.v2;

/**
 * Protobuf type {@code apache.rocketmq.v2.Settings}
 */
public final class Settings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:apache.rocketmq.v2.Settings)
    SettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Settings.newBuilder() to construct.
  private Settings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Settings() {
    clientType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Settings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Settings(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
            bitField0_ |= 0x00000001;
            clientType_ = rawValue;
            break;
          }
          case 18: {
            apache.rocketmq.v2.Endpoints.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) != 0)) {
              subBuilder = accessPoint_.toBuilder();
            }
            accessPoint_ = input.readMessage(apache.rocketmq.v2.Endpoints.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(accessPoint_);
              accessPoint_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          case 26: {
            apache.rocketmq.v2.RetryPolicy.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) != 0)) {
              subBuilder = backoffPolicy_.toBuilder();
            }
            backoffPolicy_ = input.readMessage(apache.rocketmq.v2.RetryPolicy.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(backoffPolicy_);
              backoffPolicy_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          case 34: {
            com.google.protobuf.Duration.Builder subBuilder = null;
            if (((bitField0_ & 0x00000008) != 0)) {
              subBuilder = requestTimeout_.toBuilder();
            }
            requestTimeout_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(requestTimeout_);
              requestTimeout_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000008;
            break;
          }
          case 42: {
            apache.rocketmq.v2.Publishing.Builder subBuilder = null;
            if (pubSubCase_ == 5) {
              subBuilder = ((apache.rocketmq.v2.Publishing) pubSub_).toBuilder();
            }
            pubSub_ =
                input.readMessage(apache.rocketmq.v2.Publishing.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((apache.rocketmq.v2.Publishing) pubSub_);
              pubSub_ = subBuilder.buildPartial();
            }
            pubSubCase_ = 5;
            break;
          }
          case 50: {
            apache.rocketmq.v2.Subscription.Builder subBuilder = null;
            if (pubSubCase_ == 6) {
              subBuilder = ((apache.rocketmq.v2.Subscription) pubSub_).toBuilder();
            }
            pubSub_ =
                input.readMessage(apache.rocketmq.v2.Subscription.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((apache.rocketmq.v2.Subscription) pubSub_);
              pubSub_ = subBuilder.buildPartial();
            }
            pubSubCase_ = 6;
            break;
          }
          case 58: {
            apache.rocketmq.v2.UA.Builder subBuilder = null;
            if (userAgent_ != null) {
              subBuilder = userAgent_.toBuilder();
            }
            userAgent_ = input.readMessage(apache.rocketmq.v2.UA.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(userAgent_);
              userAgent_ = subBuilder.buildPartial();
            }

            break;
          }
          case 66: {
            apache.rocketmq.v2.Metric.Builder subBuilder = null;
            if (metric_ != null) {
              subBuilder = metric_.toBuilder();
            }
            metric_ = input.readMessage(apache.rocketmq.v2.Metric.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(metric_);
              metric_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (com.google.protobuf.UninitializedMessageException e) {
      throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_Settings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_Settings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            apache.rocketmq.v2.Settings.class, apache.rocketmq.v2.Settings.Builder.class);
  }

  private int bitField0_;
  private int pubSubCase_ = 0;
  private java.lang.Object pubSub_;
  public enum PubSubCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PUBLISHING(5),
    SUBSCRIPTION(6),
    PUBSUB_NOT_SET(0);
    private final int value;
    private PubSubCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PubSubCase valueOf(int value) {
      return forNumber(value);
    }

    public static PubSubCase forNumber(int value) {
      switch (value) {
        case 5: return PUBLISHING;
        case 6: return SUBSCRIPTION;
        case 0: return PUBSUB_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public PubSubCase
  getPubSubCase() {
    return PubSubCase.forNumber(
        pubSubCase_);
  }

  public static final int CLIENT_TYPE_FIELD_NUMBER = 1;
  private int clientType_;
  /**
   * <pre>
   * Configurations for all clients.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
   * @return Whether the clientType field is set.
   */
  @java.lang.Override public boolean hasClientType() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Configurations for all clients.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
   * @return The enum numeric value on the wire for clientType.
   */
  @java.lang.Override public int getClientTypeValue() {
    return clientType_;
  }
  /**
   * <pre>
   * Configurations for all clients.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
   * @return The clientType.
   */
  @java.lang.Override public apache.rocketmq.v2.ClientType getClientType() {
    @SuppressWarnings("deprecation")
    apache.rocketmq.v2.ClientType result = apache.rocketmq.v2.ClientType.valueOf(clientType_);
    return result == null ? apache.rocketmq.v2.ClientType.UNRECOGNIZED : result;
  }

  public static final int ACCESS_POINT_FIELD_NUMBER = 2;
  private apache.rocketmq.v2.Endpoints accessPoint_;
  /**
   * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
   * @return Whether the accessPoint field is set.
   */
  @java.lang.Override
  public boolean hasAccessPoint() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
   * @return The accessPoint.
   */
  @java.lang.Override
  public apache.rocketmq.v2.Endpoints getAccessPoint() {
    return accessPoint_ == null ? apache.rocketmq.v2.Endpoints.getDefaultInstance() : accessPoint_;
  }
  /**
   * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
   */
  @java.lang.Override
  public apache.rocketmq.v2.EndpointsOrBuilder getAccessPointOrBuilder() {
    return accessPoint_ == null ? apache.rocketmq.v2.Endpoints.getDefaultInstance() : accessPoint_;
  }

  public static final int BACKOFF_POLICY_FIELD_NUMBER = 3;
  private apache.rocketmq.v2.RetryPolicy backoffPolicy_;
  /**
   * <pre>
   * If publishing of messages encounters throttling or server internal errors,
   * publishers should implement automatic retries after progressive longer
   * back-offs for consecutive errors.
   * When processing message fails, `backoff_policy` describes an interval
   * after which the message should be available to consume again.
   * For FIFO messages, the interval should be relatively small because
   * messages of the same message group would not be readily available until
   * the prior one depletes its lifecycle.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
   * @return Whether the backoffPolicy field is set.
   */
  @java.lang.Override
  public boolean hasBackoffPolicy() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * If publishing of messages encounters throttling or server internal errors,
   * publishers should implement automatic retries after progressive longer
   * back-offs for consecutive errors.
   * When processing message fails, `backoff_policy` describes an interval
   * after which the message should be available to consume again.
   * For FIFO messages, the interval should be relatively small because
   * messages of the same message group would not be readily available until
   * the prior one depletes its lifecycle.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
   * @return The backoffPolicy.
   */
  @java.lang.Override
  public apache.rocketmq.v2.RetryPolicy getBackoffPolicy() {
    return backoffPolicy_ == null ? apache.rocketmq.v2.RetryPolicy.getDefaultInstance() : backoffPolicy_;
  }
  /**
   * <pre>
   * If publishing of messages encounters throttling or server internal errors,
   * publishers should implement automatic retries after progressive longer
   * back-offs for consecutive errors.
   * When processing message fails, `backoff_policy` describes an interval
   * after which the message should be available to consume again.
   * For FIFO messages, the interval should be relatively small because
   * messages of the same message group would not be readily available until
   * the prior one depletes its lifecycle.
   * </pre>
   *
   * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
   */
  @java.lang.Override
  public apache.rocketmq.v2.RetryPolicyOrBuilder getBackoffPolicyOrBuilder() {
    return backoffPolicy_ == null ? apache.rocketmq.v2.RetryPolicy.getDefaultInstance() : backoffPolicy_;
  }

  public static final int REQUEST_TIMEOUT_FIELD_NUMBER = 4;
  private com.google.protobuf.Duration requestTimeout_;
  /**
   * <pre>
   * Request timeout for RPCs excluding long-polling.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
   * @return Whether the requestTimeout field is set.
   */
  @java.lang.Override
  public boolean hasRequestTimeout() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Request timeout for RPCs excluding long-polling.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
   * @return The requestTimeout.
   */
  @java.lang.Override
  public com.google.protobuf.Duration getRequestTimeout() {
    return requestTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : requestTimeout_;
  }
  /**
   * <pre>
   * Request timeout for RPCs excluding long-polling.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.DurationOrBuilder getRequestTimeoutOrBuilder() {
    return requestTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : requestTimeout_;
  }

  public static final int PUBLISHING_FIELD_NUMBER = 5;
  /**
   * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
   * @return Whether the publishing field is set.
   */
  @java.lang.Override
  public boolean hasPublishing() {
    return pubSubCase_ == 5;
  }
  /**
   * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
   * @return The publishing.
   */
  @java.lang.Override
  public apache.rocketmq.v2.Publishing getPublishing() {
    if (pubSubCase_ == 5) {
       return (apache.rocketmq.v2.Publishing) pubSub_;
    }
    return apache.rocketmq.v2.Publishing.getDefaultInstance();
  }
  /**
   * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
   */
  @java.lang.Override
  public apache.rocketmq.v2.PublishingOrBuilder getPublishingOrBuilder() {
    if (pubSubCase_ == 5) {
       return (apache.rocketmq.v2.Publishing) pubSub_;
    }
    return apache.rocketmq.v2.Publishing.getDefaultInstance();
  }

  public static final int SUBSCRIPTION_FIELD_NUMBER = 6;
  /**
   * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
   * @return Whether the subscription field is set.
   */
  @java.lang.Override
  public boolean hasSubscription() {
    return pubSubCase_ == 6;
  }
  /**
   * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
   * @return The subscription.
   */
  @java.lang.Override
  public apache.rocketmq.v2.Subscription getSubscription() {
    if (pubSubCase_ == 6) {
       return (apache.rocketmq.v2.Subscription) pubSub_;
    }
    return apache.rocketmq.v2.Subscription.getDefaultInstance();
  }
  /**
   * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
   */
  @java.lang.Override
  public apache.rocketmq.v2.SubscriptionOrBuilder getSubscriptionOrBuilder() {
    if (pubSubCase_ == 6) {
       return (apache.rocketmq.v2.Subscription) pubSub_;
    }
    return apache.rocketmq.v2.Subscription.getDefaultInstance();
  }

  public static final int USER_AGENT_FIELD_NUMBER = 7;
  private apache.rocketmq.v2.UA userAgent_;
  /**
   * <pre>
   * User agent details
   * </pre>
   *
   * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
   * @return Whether the userAgent field is set.
   */
  @java.lang.Override
  public boolean hasUserAgent() {
    return userAgent_ != null;
  }
  /**
   * <pre>
   * User agent details
   * </pre>
   *
   * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
   * @return The userAgent.
   */
  @java.lang.Override
  public apache.rocketmq.v2.UA getUserAgent() {
    return userAgent_ == null ? apache.rocketmq.v2.UA.getDefaultInstance() : userAgent_;
  }
  /**
   * <pre>
   * User agent details
   * </pre>
   *
   * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
   */
  @java.lang.Override
  public apache.rocketmq.v2.UAOrBuilder getUserAgentOrBuilder() {
    return getUserAgent();
  }

  public static final int METRIC_FIELD_NUMBER = 8;
  private apache.rocketmq.v2.Metric metric_;
  /**
   * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
   * @return Whether the metric field is set.
   */
  @java.lang.Override
  public boolean hasMetric() {
    return metric_ != null;
  }
  /**
   * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
   * @return The metric.
   */
  @java.lang.Override
  public apache.rocketmq.v2.Metric getMetric() {
    return metric_ == null ? apache.rocketmq.v2.Metric.getDefaultInstance() : metric_;
  }
  /**
   * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
   */
  @java.lang.Override
  public apache.rocketmq.v2.MetricOrBuilder getMetricOrBuilder() {
    return getMetric();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeEnum(1, clientType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(2, getAccessPoint());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(3, getBackoffPolicy());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      output.writeMessage(4, getRequestTimeout());
    }
    if (pubSubCase_ == 5) {
      output.writeMessage(5, (apache.rocketmq.v2.Publishing) pubSub_);
    }
    if (pubSubCase_ == 6) {
      output.writeMessage(6, (apache.rocketmq.v2.Subscription) pubSub_);
    }
    if (userAgent_ != null) {
      output.writeMessage(7, getUserAgent());
    }
    if (metric_ != null) {
      output.writeMessage(8, getMetric());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, clientType_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getAccessPoint());
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getBackoffPolicy());
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getRequestTimeout());
    }
    if (pubSubCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (apache.rocketmq.v2.Publishing) pubSub_);
    }
    if (pubSubCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (apache.rocketmq.v2.Subscription) pubSub_);
    }
    if (userAgent_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getUserAgent());
    }
    if (metric_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, getMetric());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof apache.rocketmq.v2.Settings)) {
      return super.equals(obj);
    }
    apache.rocketmq.v2.Settings other = (apache.rocketmq.v2.Settings) obj;

    if (hasClientType() != other.hasClientType()) return false;
    if (hasClientType()) {
      if (clientType_ != other.clientType_) return false;
    }
    if (hasAccessPoint() != other.hasAccessPoint()) return false;
    if (hasAccessPoint()) {
      if (!getAccessPoint()
          .equals(other.getAccessPoint())) return false;
    }
    if (hasBackoffPolicy() != other.hasBackoffPolicy()) return false;
    if (hasBackoffPolicy()) {
      if (!getBackoffPolicy()
          .equals(other.getBackoffPolicy())) return false;
    }
    if (hasRequestTimeout() != other.hasRequestTimeout()) return false;
    if (hasRequestTimeout()) {
      if (!getRequestTimeout()
          .equals(other.getRequestTimeout())) return false;
    }
    if (hasUserAgent() != other.hasUserAgent()) return false;
    if (hasUserAgent()) {
      if (!getUserAgent()
          .equals(other.getUserAgent())) return false;
    }
    if (hasMetric() != other.hasMetric()) return false;
    if (hasMetric()) {
      if (!getMetric()
          .equals(other.getMetric())) return false;
    }
    if (!getPubSubCase().equals(other.getPubSubCase())) return false;
    switch (pubSubCase_) {
      case 5:
        if (!getPublishing()
            .equals(other.getPublishing())) return false;
        break;
      case 6:
        if (!getSubscription()
            .equals(other.getSubscription())) return false;
        break;
      case 0:
      default:
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasClientType()) {
      hash = (37 * hash) + CLIENT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + clientType_;
    }
    if (hasAccessPoint()) {
      hash = (37 * hash) + ACCESS_POINT_FIELD_NUMBER;
      hash = (53 * hash) + getAccessPoint().hashCode();
    }
    if (hasBackoffPolicy()) {
      hash = (37 * hash) + BACKOFF_POLICY_FIELD_NUMBER;
      hash = (53 * hash) + getBackoffPolicy().hashCode();
    }
    if (hasRequestTimeout()) {
      hash = (37 * hash) + REQUEST_TIMEOUT_FIELD_NUMBER;
      hash = (53 * hash) + getRequestTimeout().hashCode();
    }
    if (hasUserAgent()) {
      hash = (37 * hash) + USER_AGENT_FIELD_NUMBER;
      hash = (53 * hash) + getUserAgent().hashCode();
    }
    if (hasMetric()) {
      hash = (37 * hash) + METRIC_FIELD_NUMBER;
      hash = (53 * hash) + getMetric().hashCode();
    }
    switch (pubSubCase_) {
      case 5:
        hash = (37 * hash) + PUBLISHING_FIELD_NUMBER;
        hash = (53 * hash) + getPublishing().hashCode();
        break;
      case 6:
        hash = (37 * hash) + SUBSCRIPTION_FIELD_NUMBER;
        hash = (53 * hash) + getSubscription().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static apache.rocketmq.v2.Settings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static apache.rocketmq.v2.Settings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static apache.rocketmq.v2.Settings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static apache.rocketmq.v2.Settings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static apache.rocketmq.v2.Settings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static apache.rocketmq.v2.Settings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static apache.rocketmq.v2.Settings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static apache.rocketmq.v2.Settings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static apache.rocketmq.v2.Settings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static apache.rocketmq.v2.Settings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static apache.rocketmq.v2.Settings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static apache.rocketmq.v2.Settings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(apache.rocketmq.v2.Settings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code apache.rocketmq.v2.Settings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:apache.rocketmq.v2.Settings)
      apache.rocketmq.v2.SettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_Settings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_Settings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              apache.rocketmq.v2.Settings.class, apache.rocketmq.v2.Settings.Builder.class);
    }

    // Construct using apache.rocketmq.v2.Settings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getAccessPointFieldBuilder();
        getBackoffPolicyFieldBuilder();
        getRequestTimeoutFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      clientType_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (accessPointBuilder_ == null) {
        accessPoint_ = null;
      } else {
        accessPointBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      if (backoffPolicyBuilder_ == null) {
        backoffPolicy_ = null;
      } else {
        backoffPolicyBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      if (requestTimeoutBuilder_ == null) {
        requestTimeout_ = null;
      } else {
        requestTimeoutBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      if (userAgentBuilder_ == null) {
        userAgent_ = null;
      } else {
        userAgent_ = null;
        userAgentBuilder_ = null;
      }
      if (metricBuilder_ == null) {
        metric_ = null;
      } else {
        metric_ = null;
        metricBuilder_ = null;
      }
      pubSubCase_ = 0;
      pubSub_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return apache.rocketmq.v2.MQDomain.internal_static_apache_rocketmq_v2_Settings_descriptor;
    }

    @java.lang.Override
    public apache.rocketmq.v2.Settings getDefaultInstanceForType() {
      return apache.rocketmq.v2.Settings.getDefaultInstance();
    }

    @java.lang.Override
    public apache.rocketmq.v2.Settings build() {
      apache.rocketmq.v2.Settings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public apache.rocketmq.v2.Settings buildPartial() {
      apache.rocketmq.v2.Settings result = new apache.rocketmq.v2.Settings(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.clientType_ = clientType_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        if (accessPointBuilder_ == null) {
          result.accessPoint_ = accessPoint_;
        } else {
          result.accessPoint_ = accessPointBuilder_.build();
        }
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        if (backoffPolicyBuilder_ == null) {
          result.backoffPolicy_ = backoffPolicy_;
        } else {
          result.backoffPolicy_ = backoffPolicyBuilder_.build();
        }
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        if (requestTimeoutBuilder_ == null) {
          result.requestTimeout_ = requestTimeout_;
        } else {
          result.requestTimeout_ = requestTimeoutBuilder_.build();
        }
        to_bitField0_ |= 0x00000008;
      }
      if (pubSubCase_ == 5) {
        if (publishingBuilder_ == null) {
          result.pubSub_ = pubSub_;
        } else {
          result.pubSub_ = publishingBuilder_.build();
        }
      }
      if (pubSubCase_ == 6) {
        if (subscriptionBuilder_ == null) {
          result.pubSub_ = pubSub_;
        } else {
          result.pubSub_ = subscriptionBuilder_.build();
        }
      }
      if (userAgentBuilder_ == null) {
        result.userAgent_ = userAgent_;
      } else {
        result.userAgent_ = userAgentBuilder_.build();
      }
      if (metricBuilder_ == null) {
        result.metric_ = metric_;
      } else {
        result.metric_ = metricBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      result.pubSubCase_ = pubSubCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof apache.rocketmq.v2.Settings) {
        return mergeFrom((apache.rocketmq.v2.Settings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(apache.rocketmq.v2.Settings other) {
      if (other == apache.rocketmq.v2.Settings.getDefaultInstance()) return this;
      if (other.hasClientType()) {
        setClientType(other.getClientType());
      }
      if (other.hasAccessPoint()) {
        mergeAccessPoint(other.getAccessPoint());
      }
      if (other.hasBackoffPolicy()) {
        mergeBackoffPolicy(other.getBackoffPolicy());
      }
      if (other.hasRequestTimeout()) {
        mergeRequestTimeout(other.getRequestTimeout());
      }
      if (other.hasUserAgent()) {
        mergeUserAgent(other.getUserAgent());
      }
      if (other.hasMetric()) {
        mergeMetric(other.getMetric());
      }
      switch (other.getPubSubCase()) {
        case PUBLISHING: {
          mergePublishing(other.getPublishing());
          break;
        }
        case SUBSCRIPTION: {
          mergeSubscription(other.getSubscription());
          break;
        }
        case PUBSUB_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      apache.rocketmq.v2.Settings parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (apache.rocketmq.v2.Settings) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int pubSubCase_ = 0;
    private java.lang.Object pubSub_;
    public PubSubCase
        getPubSubCase() {
      return PubSubCase.forNumber(
          pubSubCase_);
    }

    public Builder clearPubSub() {
      pubSubCase_ = 0;
      pubSub_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private int clientType_ = 0;
    /**
     * <pre>
     * Configurations for all clients.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
     * @return Whether the clientType field is set.
     */
    @java.lang.Override public boolean hasClientType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Configurations for all clients.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
     * @return The enum numeric value on the wire for clientType.
     */
    @java.lang.Override public int getClientTypeValue() {
      return clientType_;
    }
    /**
     * <pre>
     * Configurations for all clients.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
     * @param value The enum numeric value on the wire for clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientTypeValue(int value) {
      bitField0_ |= 0x00000001;
      clientType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configurations for all clients.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
     * @return The clientType.
     */
    @java.lang.Override
    public apache.rocketmq.v2.ClientType getClientType() {
      @SuppressWarnings("deprecation")
      apache.rocketmq.v2.ClientType result = apache.rocketmq.v2.ClientType.valueOf(clientType_);
      return result == null ? apache.rocketmq.v2.ClientType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Configurations for all clients.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
     * @param value The clientType to set.
     * @return This builder for chaining.
     */
    public Builder setClientType(apache.rocketmq.v2.ClientType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      clientType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Configurations for all clients.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.ClientType client_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearClientType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      clientType_ = 0;
      onChanged();
      return this;
    }

    private apache.rocketmq.v2.Endpoints accessPoint_;
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Endpoints, apache.rocketmq.v2.Endpoints.Builder, apache.rocketmq.v2.EndpointsOrBuilder> accessPointBuilder_;
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     * @return Whether the accessPoint field is set.
     */
    public boolean hasAccessPoint() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     * @return The accessPoint.
     */
    public apache.rocketmq.v2.Endpoints getAccessPoint() {
      if (accessPointBuilder_ == null) {
        return accessPoint_ == null ? apache.rocketmq.v2.Endpoints.getDefaultInstance() : accessPoint_;
      } else {
        return accessPointBuilder_.getMessage();
      }
    }
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     */
    public Builder setAccessPoint(apache.rocketmq.v2.Endpoints value) {
      if (accessPointBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        accessPoint_ = value;
        onChanged();
      } else {
        accessPointBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     */
    public Builder setAccessPoint(
        apache.rocketmq.v2.Endpoints.Builder builderForValue) {
      if (accessPointBuilder_ == null) {
        accessPoint_ = builderForValue.build();
        onChanged();
      } else {
        accessPointBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     */
    public Builder mergeAccessPoint(apache.rocketmq.v2.Endpoints value) {
      if (accessPointBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
            accessPoint_ != null &&
            accessPoint_ != apache.rocketmq.v2.Endpoints.getDefaultInstance()) {
          accessPoint_ =
            apache.rocketmq.v2.Endpoints.newBuilder(accessPoint_).mergeFrom(value).buildPartial();
        } else {
          accessPoint_ = value;
        }
        onChanged();
      } else {
        accessPointBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      return this;
    }
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     */
    public Builder clearAccessPoint() {
      if (accessPointBuilder_ == null) {
        accessPoint_ = null;
        onChanged();
      } else {
        accessPointBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000002);
      return this;
    }
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     */
    public apache.rocketmq.v2.Endpoints.Builder getAccessPointBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getAccessPointFieldBuilder().getBuilder();
    }
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     */
    public apache.rocketmq.v2.EndpointsOrBuilder getAccessPointOrBuilder() {
      if (accessPointBuilder_ != null) {
        return accessPointBuilder_.getMessageOrBuilder();
      } else {
        return accessPoint_ == null ?
            apache.rocketmq.v2.Endpoints.getDefaultInstance() : accessPoint_;
      }
    }
    /**
     * <code>optional .apache.rocketmq.v2.Endpoints access_point = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Endpoints, apache.rocketmq.v2.Endpoints.Builder, apache.rocketmq.v2.EndpointsOrBuilder> 
        getAccessPointFieldBuilder() {
      if (accessPointBuilder_ == null) {
        accessPointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            apache.rocketmq.v2.Endpoints, apache.rocketmq.v2.Endpoints.Builder, apache.rocketmq.v2.EndpointsOrBuilder>(
                getAccessPoint(),
                getParentForChildren(),
                isClean());
        accessPoint_ = null;
      }
      return accessPointBuilder_;
    }

    private apache.rocketmq.v2.RetryPolicy backoffPolicy_;
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.RetryPolicy, apache.rocketmq.v2.RetryPolicy.Builder, apache.rocketmq.v2.RetryPolicyOrBuilder> backoffPolicyBuilder_;
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     * @return Whether the backoffPolicy field is set.
     */
    public boolean hasBackoffPolicy() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     * @return The backoffPolicy.
     */
    public apache.rocketmq.v2.RetryPolicy getBackoffPolicy() {
      if (backoffPolicyBuilder_ == null) {
        return backoffPolicy_ == null ? apache.rocketmq.v2.RetryPolicy.getDefaultInstance() : backoffPolicy_;
      } else {
        return backoffPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     */
    public Builder setBackoffPolicy(apache.rocketmq.v2.RetryPolicy value) {
      if (backoffPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        backoffPolicy_ = value;
        onChanged();
      } else {
        backoffPolicyBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     */
    public Builder setBackoffPolicy(
        apache.rocketmq.v2.RetryPolicy.Builder builderForValue) {
      if (backoffPolicyBuilder_ == null) {
        backoffPolicy_ = builderForValue.build();
        onChanged();
      } else {
        backoffPolicyBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     */
    public Builder mergeBackoffPolicy(apache.rocketmq.v2.RetryPolicy value) {
      if (backoffPolicyBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
            backoffPolicy_ != null &&
            backoffPolicy_ != apache.rocketmq.v2.RetryPolicy.getDefaultInstance()) {
          backoffPolicy_ =
            apache.rocketmq.v2.RetryPolicy.newBuilder(backoffPolicy_).mergeFrom(value).buildPartial();
        } else {
          backoffPolicy_ = value;
        }
        onChanged();
      } else {
        backoffPolicyBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      return this;
    }
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     */
    public Builder clearBackoffPolicy() {
      if (backoffPolicyBuilder_ == null) {
        backoffPolicy_ = null;
        onChanged();
      } else {
        backoffPolicyBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     */
    public apache.rocketmq.v2.RetryPolicy.Builder getBackoffPolicyBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getBackoffPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     */
    public apache.rocketmq.v2.RetryPolicyOrBuilder getBackoffPolicyOrBuilder() {
      if (backoffPolicyBuilder_ != null) {
        return backoffPolicyBuilder_.getMessageOrBuilder();
      } else {
        return backoffPolicy_ == null ?
            apache.rocketmq.v2.RetryPolicy.getDefaultInstance() : backoffPolicy_;
      }
    }
    /**
     * <pre>
     * If publishing of messages encounters throttling or server internal errors,
     * publishers should implement automatic retries after progressive longer
     * back-offs for consecutive errors.
     * When processing message fails, `backoff_policy` describes an interval
     * after which the message should be available to consume again.
     * For FIFO messages, the interval should be relatively small because
     * messages of the same message group would not be readily available until
     * the prior one depletes its lifecycle.
     * </pre>
     *
     * <code>optional .apache.rocketmq.v2.RetryPolicy backoff_policy = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.RetryPolicy, apache.rocketmq.v2.RetryPolicy.Builder, apache.rocketmq.v2.RetryPolicyOrBuilder> 
        getBackoffPolicyFieldBuilder() {
      if (backoffPolicyBuilder_ == null) {
        backoffPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            apache.rocketmq.v2.RetryPolicy, apache.rocketmq.v2.RetryPolicy.Builder, apache.rocketmq.v2.RetryPolicyOrBuilder>(
                getBackoffPolicy(),
                getParentForChildren(),
                isClean());
        backoffPolicy_ = null;
      }
      return backoffPolicyBuilder_;
    }

    private com.google.protobuf.Duration requestTimeout_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> requestTimeoutBuilder_;
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     * @return Whether the requestTimeout field is set.
     */
    public boolean hasRequestTimeout() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     * @return The requestTimeout.
     */
    public com.google.protobuf.Duration getRequestTimeout() {
      if (requestTimeoutBuilder_ == null) {
        return requestTimeout_ == null ? com.google.protobuf.Duration.getDefaultInstance() : requestTimeout_;
      } else {
        return requestTimeoutBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     */
    public Builder setRequestTimeout(com.google.protobuf.Duration value) {
      if (requestTimeoutBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        requestTimeout_ = value;
        onChanged();
      } else {
        requestTimeoutBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     */
    public Builder setRequestTimeout(
        com.google.protobuf.Duration.Builder builderForValue) {
      if (requestTimeoutBuilder_ == null) {
        requestTimeout_ = builderForValue.build();
        onChanged();
      } else {
        requestTimeoutBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     */
    public Builder mergeRequestTimeout(com.google.protobuf.Duration value) {
      if (requestTimeoutBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
            requestTimeout_ != null &&
            requestTimeout_ != com.google.protobuf.Duration.getDefaultInstance()) {
          requestTimeout_ =
            com.google.protobuf.Duration.newBuilder(requestTimeout_).mergeFrom(value).buildPartial();
        } else {
          requestTimeout_ = value;
        }
        onChanged();
      } else {
        requestTimeoutBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      return this;
    }
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     */
    public Builder clearRequestTimeout() {
      if (requestTimeoutBuilder_ == null) {
        requestTimeout_ = null;
        onChanged();
      } else {
        requestTimeoutBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     */
    public com.google.protobuf.Duration.Builder getRequestTimeoutBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getRequestTimeoutFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     */
    public com.google.protobuf.DurationOrBuilder getRequestTimeoutOrBuilder() {
      if (requestTimeoutBuilder_ != null) {
        return requestTimeoutBuilder_.getMessageOrBuilder();
      } else {
        return requestTimeout_ == null ?
            com.google.protobuf.Duration.getDefaultInstance() : requestTimeout_;
      }
    }
    /**
     * <pre>
     * Request timeout for RPCs excluding long-polling.
     * </pre>
     *
     * <code>optional .google.protobuf.Duration request_timeout = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
        getRequestTimeoutFieldBuilder() {
      if (requestTimeoutBuilder_ == null) {
        requestTimeoutBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                getRequestTimeout(),
                getParentForChildren(),
                isClean());
        requestTimeout_ = null;
      }
      return requestTimeoutBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Publishing, apache.rocketmq.v2.Publishing.Builder, apache.rocketmq.v2.PublishingOrBuilder> publishingBuilder_;
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     * @return Whether the publishing field is set.
     */
    @java.lang.Override
    public boolean hasPublishing() {
      return pubSubCase_ == 5;
    }
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     * @return The publishing.
     */
    @java.lang.Override
    public apache.rocketmq.v2.Publishing getPublishing() {
      if (publishingBuilder_ == null) {
        if (pubSubCase_ == 5) {
          return (apache.rocketmq.v2.Publishing) pubSub_;
        }
        return apache.rocketmq.v2.Publishing.getDefaultInstance();
      } else {
        if (pubSubCase_ == 5) {
          return publishingBuilder_.getMessage();
        }
        return apache.rocketmq.v2.Publishing.getDefaultInstance();
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     */
    public Builder setPublishing(apache.rocketmq.v2.Publishing value) {
      if (publishingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pubSub_ = value;
        onChanged();
      } else {
        publishingBuilder_.setMessage(value);
      }
      pubSubCase_ = 5;
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     */
    public Builder setPublishing(
        apache.rocketmq.v2.Publishing.Builder builderForValue) {
      if (publishingBuilder_ == null) {
        pubSub_ = builderForValue.build();
        onChanged();
      } else {
        publishingBuilder_.setMessage(builderForValue.build());
      }
      pubSubCase_ = 5;
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     */
    public Builder mergePublishing(apache.rocketmq.v2.Publishing value) {
      if (publishingBuilder_ == null) {
        if (pubSubCase_ == 5 &&
            pubSub_ != apache.rocketmq.v2.Publishing.getDefaultInstance()) {
          pubSub_ = apache.rocketmq.v2.Publishing.newBuilder((apache.rocketmq.v2.Publishing) pubSub_)
              .mergeFrom(value).buildPartial();
        } else {
          pubSub_ = value;
        }
        onChanged();
      } else {
        if (pubSubCase_ == 5) {
          publishingBuilder_.mergeFrom(value);
        } else {
          publishingBuilder_.setMessage(value);
        }
      }
      pubSubCase_ = 5;
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     */
    public Builder clearPublishing() {
      if (publishingBuilder_ == null) {
        if (pubSubCase_ == 5) {
          pubSubCase_ = 0;
          pubSub_ = null;
          onChanged();
        }
      } else {
        if (pubSubCase_ == 5) {
          pubSubCase_ = 0;
          pubSub_ = null;
        }
        publishingBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     */
    public apache.rocketmq.v2.Publishing.Builder getPublishingBuilder() {
      return getPublishingFieldBuilder().getBuilder();
    }
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     */
    @java.lang.Override
    public apache.rocketmq.v2.PublishingOrBuilder getPublishingOrBuilder() {
      if ((pubSubCase_ == 5) && (publishingBuilder_ != null)) {
        return publishingBuilder_.getMessageOrBuilder();
      } else {
        if (pubSubCase_ == 5) {
          return (apache.rocketmq.v2.Publishing) pubSub_;
        }
        return apache.rocketmq.v2.Publishing.getDefaultInstance();
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Publishing publishing = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Publishing, apache.rocketmq.v2.Publishing.Builder, apache.rocketmq.v2.PublishingOrBuilder> 
        getPublishingFieldBuilder() {
      if (publishingBuilder_ == null) {
        if (!(pubSubCase_ == 5)) {
          pubSub_ = apache.rocketmq.v2.Publishing.getDefaultInstance();
        }
        publishingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            apache.rocketmq.v2.Publishing, apache.rocketmq.v2.Publishing.Builder, apache.rocketmq.v2.PublishingOrBuilder>(
                (apache.rocketmq.v2.Publishing) pubSub_,
                getParentForChildren(),
                isClean());
        pubSub_ = null;
      }
      pubSubCase_ = 5;
      onChanged();;
      return publishingBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Subscription, apache.rocketmq.v2.Subscription.Builder, apache.rocketmq.v2.SubscriptionOrBuilder> subscriptionBuilder_;
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     * @return Whether the subscription field is set.
     */
    @java.lang.Override
    public boolean hasSubscription() {
      return pubSubCase_ == 6;
    }
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     * @return The subscription.
     */
    @java.lang.Override
    public apache.rocketmq.v2.Subscription getSubscription() {
      if (subscriptionBuilder_ == null) {
        if (pubSubCase_ == 6) {
          return (apache.rocketmq.v2.Subscription) pubSub_;
        }
        return apache.rocketmq.v2.Subscription.getDefaultInstance();
      } else {
        if (pubSubCase_ == 6) {
          return subscriptionBuilder_.getMessage();
        }
        return apache.rocketmq.v2.Subscription.getDefaultInstance();
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     */
    public Builder setSubscription(apache.rocketmq.v2.Subscription value) {
      if (subscriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pubSub_ = value;
        onChanged();
      } else {
        subscriptionBuilder_.setMessage(value);
      }
      pubSubCase_ = 6;
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     */
    public Builder setSubscription(
        apache.rocketmq.v2.Subscription.Builder builderForValue) {
      if (subscriptionBuilder_ == null) {
        pubSub_ = builderForValue.build();
        onChanged();
      } else {
        subscriptionBuilder_.setMessage(builderForValue.build());
      }
      pubSubCase_ = 6;
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     */
    public Builder mergeSubscription(apache.rocketmq.v2.Subscription value) {
      if (subscriptionBuilder_ == null) {
        if (pubSubCase_ == 6 &&
            pubSub_ != apache.rocketmq.v2.Subscription.getDefaultInstance()) {
          pubSub_ = apache.rocketmq.v2.Subscription.newBuilder((apache.rocketmq.v2.Subscription) pubSub_)
              .mergeFrom(value).buildPartial();
        } else {
          pubSub_ = value;
        }
        onChanged();
      } else {
        if (pubSubCase_ == 6) {
          subscriptionBuilder_.mergeFrom(value);
        } else {
          subscriptionBuilder_.setMessage(value);
        }
      }
      pubSubCase_ = 6;
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     */
    public Builder clearSubscription() {
      if (subscriptionBuilder_ == null) {
        if (pubSubCase_ == 6) {
          pubSubCase_ = 0;
          pubSub_ = null;
          onChanged();
        }
      } else {
        if (pubSubCase_ == 6) {
          pubSubCase_ = 0;
          pubSub_ = null;
        }
        subscriptionBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     */
    public apache.rocketmq.v2.Subscription.Builder getSubscriptionBuilder() {
      return getSubscriptionFieldBuilder().getBuilder();
    }
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     */
    @java.lang.Override
    public apache.rocketmq.v2.SubscriptionOrBuilder getSubscriptionOrBuilder() {
      if ((pubSubCase_ == 6) && (subscriptionBuilder_ != null)) {
        return subscriptionBuilder_.getMessageOrBuilder();
      } else {
        if (pubSubCase_ == 6) {
          return (apache.rocketmq.v2.Subscription) pubSub_;
        }
        return apache.rocketmq.v2.Subscription.getDefaultInstance();
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Subscription subscription = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Subscription, apache.rocketmq.v2.Subscription.Builder, apache.rocketmq.v2.SubscriptionOrBuilder> 
        getSubscriptionFieldBuilder() {
      if (subscriptionBuilder_ == null) {
        if (!(pubSubCase_ == 6)) {
          pubSub_ = apache.rocketmq.v2.Subscription.getDefaultInstance();
        }
        subscriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            apache.rocketmq.v2.Subscription, apache.rocketmq.v2.Subscription.Builder, apache.rocketmq.v2.SubscriptionOrBuilder>(
                (apache.rocketmq.v2.Subscription) pubSub_,
                getParentForChildren(),
                isClean());
        pubSub_ = null;
      }
      pubSubCase_ = 6;
      onChanged();;
      return subscriptionBuilder_;
    }

    private apache.rocketmq.v2.UA userAgent_;
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.UA, apache.rocketmq.v2.UA.Builder, apache.rocketmq.v2.UAOrBuilder> userAgentBuilder_;
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     * @return Whether the userAgent field is set.
     */
    public boolean hasUserAgent() {
      return userAgentBuilder_ != null || userAgent_ != null;
    }
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     * @return The userAgent.
     */
    public apache.rocketmq.v2.UA getUserAgent() {
      if (userAgentBuilder_ == null) {
        return userAgent_ == null ? apache.rocketmq.v2.UA.getDefaultInstance() : userAgent_;
      } else {
        return userAgentBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     */
    public Builder setUserAgent(apache.rocketmq.v2.UA value) {
      if (userAgentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        userAgent_ = value;
        onChanged();
      } else {
        userAgentBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     */
    public Builder setUserAgent(
        apache.rocketmq.v2.UA.Builder builderForValue) {
      if (userAgentBuilder_ == null) {
        userAgent_ = builderForValue.build();
        onChanged();
      } else {
        userAgentBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     */
    public Builder mergeUserAgent(apache.rocketmq.v2.UA value) {
      if (userAgentBuilder_ == null) {
        if (userAgent_ != null) {
          userAgent_ =
            apache.rocketmq.v2.UA.newBuilder(userAgent_).mergeFrom(value).buildPartial();
        } else {
          userAgent_ = value;
        }
        onChanged();
      } else {
        userAgentBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     */
    public Builder clearUserAgent() {
      if (userAgentBuilder_ == null) {
        userAgent_ = null;
        onChanged();
      } else {
        userAgent_ = null;
        userAgentBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     */
    public apache.rocketmq.v2.UA.Builder getUserAgentBuilder() {
      
      onChanged();
      return getUserAgentFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     */
    public apache.rocketmq.v2.UAOrBuilder getUserAgentOrBuilder() {
      if (userAgentBuilder_ != null) {
        return userAgentBuilder_.getMessageOrBuilder();
      } else {
        return userAgent_ == null ?
            apache.rocketmq.v2.UA.getDefaultInstance() : userAgent_;
      }
    }
    /**
     * <pre>
     * User agent details
     * </pre>
     *
     * <code>.apache.rocketmq.v2.UA user_agent = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.UA, apache.rocketmq.v2.UA.Builder, apache.rocketmq.v2.UAOrBuilder> 
        getUserAgentFieldBuilder() {
      if (userAgentBuilder_ == null) {
        userAgentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            apache.rocketmq.v2.UA, apache.rocketmq.v2.UA.Builder, apache.rocketmq.v2.UAOrBuilder>(
                getUserAgent(),
                getParentForChildren(),
                isClean());
        userAgent_ = null;
      }
      return userAgentBuilder_;
    }

    private apache.rocketmq.v2.Metric metric_;
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Metric, apache.rocketmq.v2.Metric.Builder, apache.rocketmq.v2.MetricOrBuilder> metricBuilder_;
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     * @return Whether the metric field is set.
     */
    public boolean hasMetric() {
      return metricBuilder_ != null || metric_ != null;
    }
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     * @return The metric.
     */
    public apache.rocketmq.v2.Metric getMetric() {
      if (metricBuilder_ == null) {
        return metric_ == null ? apache.rocketmq.v2.Metric.getDefaultInstance() : metric_;
      } else {
        return metricBuilder_.getMessage();
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     */
    public Builder setMetric(apache.rocketmq.v2.Metric value) {
      if (metricBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metric_ = value;
        onChanged();
      } else {
        metricBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     */
    public Builder setMetric(
        apache.rocketmq.v2.Metric.Builder builderForValue) {
      if (metricBuilder_ == null) {
        metric_ = builderForValue.build();
        onChanged();
      } else {
        metricBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     */
    public Builder mergeMetric(apache.rocketmq.v2.Metric value) {
      if (metricBuilder_ == null) {
        if (metric_ != null) {
          metric_ =
            apache.rocketmq.v2.Metric.newBuilder(metric_).mergeFrom(value).buildPartial();
        } else {
          metric_ = value;
        }
        onChanged();
      } else {
        metricBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     */
    public Builder clearMetric() {
      if (metricBuilder_ == null) {
        metric_ = null;
        onChanged();
      } else {
        metric_ = null;
        metricBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     */
    public apache.rocketmq.v2.Metric.Builder getMetricBuilder() {
      
      onChanged();
      return getMetricFieldBuilder().getBuilder();
    }
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     */
    public apache.rocketmq.v2.MetricOrBuilder getMetricOrBuilder() {
      if (metricBuilder_ != null) {
        return metricBuilder_.getMessageOrBuilder();
      } else {
        return metric_ == null ?
            apache.rocketmq.v2.Metric.getDefaultInstance() : metric_;
      }
    }
    /**
     * <code>.apache.rocketmq.v2.Metric metric = 8;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        apache.rocketmq.v2.Metric, apache.rocketmq.v2.Metric.Builder, apache.rocketmq.v2.MetricOrBuilder> 
        getMetricFieldBuilder() {
      if (metricBuilder_ == null) {
        metricBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            apache.rocketmq.v2.Metric, apache.rocketmq.v2.Metric.Builder, apache.rocketmq.v2.MetricOrBuilder>(
                getMetric(),
                getParentForChildren(),
                isClean());
        metric_ = null;
      }
      return metricBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:apache.rocketmq.v2.Settings)
  }

  // @@protoc_insertion_point(class_scope:apache.rocketmq.v2.Settings)
  private static final apache.rocketmq.v2.Settings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new apache.rocketmq.v2.Settings();
  }

  public static apache.rocketmq.v2.Settings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Settings>
      PARSER = new com.google.protobuf.AbstractParser<Settings>() {
    @java.lang.Override
    public Settings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Settings(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Settings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Settings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public apache.rocketmq.v2.Settings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

